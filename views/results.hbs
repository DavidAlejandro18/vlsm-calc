{{> topPage }}
    <div class="container vh-100 vh-100 d-flex flex-column align-items-center justify-content-center">
        <h1>Calculadora VLSM</h1>
        <h4>Resultados</h4>

        <style>
            .copyable {
                transition: background-color 0.2s ease;
                cursor: pointer;
            }
            
            .copyable:hover {
                background-color: #e7f3ff !important;
                color: #2c2e39 !important;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            }
            
            .copyable:active {
                background-color: #cce7ff !important;
                color: #272b30 !important;
            }
        </style>

        <table class="table table-sm table-bordered table-hover w-75">
            <thead>
                <tr>
                    <th colspan="2" class="text-end">Dirección de red:</th>
                    <td>{{ data.main_network }}</td>
                    <th class="text-end">Prefijo:</th>
                    <td>/{{ data.prefix }}</td>
                    <th class="text-end">Mascara:</th>
                    <td colspan="2">{{ data.subnetMask }}</td>
                </tr>
                <tr class="text-center">
                    <th>Nombre de la subred</th>
                    <th>No. de hosts</th>
                    <th>No. de hosts permitidos</th>
                    <th>Dirección de subred</th>
                    <th>Máscara de subred</th>
                    <th>Primera dirección</th>
                    <th>Última dirección</th>
                    <th>Dirección de broadcast</th>
                </tr>
            </thead>
            <tbody>
                {{#each data.vlsm_result}}
                    <tr class="text-center">
                        <td>{{ lan }}</td>
                        <td>{{ hostrequired }}</td>
                        <td>{{ hostsAvailable }}</td>
                        <td class="copyable" title="Click para copiar">{{ network }}/{{ subnetMaskPrefix }}</td>
                        <td class="copyable" title="Click para copiar">{{ subnetMask }}</td>
                        <td class="copyable" title="Click para copiar">{{ firstHost }}</td>
                        <td class="copyable" title="Click para copiar">{{ lastHost }}</td>
                        <td class="copyable" title="Click para copiar">{{ broadcast }}</td>
                    </tr>
                {{/each}}
            </tbody>
        </table>

        <!-- Notification for copy success -->
        <div id="copy-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1050; display: none;">
            <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="bi bi-clipboard-check me-1"></i>
                        <span id="copy-message">Copiado al portapapeles</span>
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>

        <button class="btn btn-lg" type="button" data-bs-toggle="collapse" data-bs-target="#more-info" aria-expanded="false" aria-controls="more-info">
            <i class="bi bi-arrow-down-circle-fill"></i>
        </button>
        
        <div class="collapse mt-2 w-75" id="more-info">
            <h4 class="text-center">Cálculo de VLSM para Subredes</h4>
            <hr>
            <section>
                <p>El cálculo de VLSM (Variable Length Subnet Masking) permite dividir una red principal en subredes de diferentes tamaños, ajustadas a las necesidades específicas de cada segmento. A continuación, se detalla el proceso paso a paso para realizar este cálculo.</p>
            </section>

            <section>
                <h5>Paso 1: Determinar la Red Principal y el Prefijo</h5>
                <p>La red principal se define por una dirección IP y un prefijo que determina la cantidad de bits usados para la red. Si el prefijo no se especifica, se determina según la clase de la dirección IP:</p>

                <ul>
                    <li>Clase A (1-126): Prefijo 8</li>
                    <li>Clase B (128-191): Prefijo 16</li>
                    <li>Clase C (192-223): Prefijo 24</li>
                </ul>
            </section>

            <section>
                <h5>Paso 2: Ordenar las Subredes por Tamaño</h5>
                <p>Las subredes (LANs) se ordenan de mayor a menor según la cantidad de dispositivos que necesitan soportar. Esto garantiza que las subredes más grandes reciban los bloques de direcciones más grandes disponibles.</p>
            </section>

            <section>
                <h5>Paso 3: Calcular los Bits Necesarios para Cada Subred</h5>
                <p>Para cada subred, se calcula el número de bits necesarios para los hosts:</p>
                <p class="text-center">\(\mathrm{bits\_requeridos} = [ \log_2(\mathrm{hosts\_requeridos} + 2) ]\)</p>
            </section>

            <section>
                <h5>Paso 4: Determinar la Máscara de Subred</h5>
                <p>Con los bits necesarios, se calcula el nuevo prefijo de la subred:</p>
                <p class="text-center">\(\mathrm{prefijo\_subred} = 32 - \mathrm{bits\_requeridos}\)</p>
                <p>La máscara de subred en formato decimal se obtiene convirtiendo a decimal una cadena binaria con los bits de red en 1 y los bits de hosts en 0.</p>
            </section>

            <section>
                <h5>Paso 5: Calcular las Direcciones de Red y Broadcast</h5>
                <p>Para cada subred, se determina:</p>
                <ul>
                    <li>Dirección de red: los bits de host son todos 0.</li>
                    <li>Dirección de broadcast: los bits de host son todos 1.</li>
                </ul>
                <p>La dirección de red se convierte en la primera dirección de host añadiendo 1 y la dirección de broadcast se convierte en la última dirección de host restando 1.</p>
            </section>

            <section>
                <h5>Paso 6: Asignar la Siguiente Subred</h5>
                <p>La siguiente subred comienza inmediatamente después de la dirección de broadcast de la subred actual.</p>
            </section>
            <br>
        </div>
    </div>

    <script>
        $(document).ready(function() {
            const collapseButton = $('[data-bs-toggle="collapse"]');
            const icon = collapseButton.find('i');

            collapseButton.on('click', function() {
                if (collapseButton.attr('aria-expanded') === 'true') {
                    icon.removeClass('bi-arrow-down-circle-fill');
                    icon.addClass('bi-arrow-up-circle-fill');
                } else {
                    icon.removeClass('bi-arrow-up-circle-fill');
                    icon.addClass('bi-arrow-down-circle-fill');
                }
            });

            // Copy to clipboard functionality
            $('.copyable').on('click', function() {
                let textToCopy = $(this).text().trim();
                
                // If this is a network address with prefix (contains '/'), extract only the IP
                if (textToCopy.includes('/')) {
                    textToCopy = textToCopy.split('/')[0];
                }
                
                // Use modern clipboard API if available
                if (navigator.clipboard) {
                    navigator.clipboard.writeText(textToCopy).then(function() {
                        showCopyNotification(textToCopy);
                    }).catch(function() {
                        // Fallback to older method
                        fallbackCopyToClipboard(textToCopy);
                    });
                } else {
                    // Fallback for older browsers
                    fallbackCopyToClipboard(textToCopy);
                }
            });

            function fallbackCopyToClipboard(text) {
                const textArea = document.createElement('textarea');
                textArea.value = text;
                document.body.appendChild(textArea);
                textArea.focus();
                textArea.select();
                
                try {
                    document.execCommand('copy');
                    showCopyNotification(text);
                } catch (err) {
                    console.error('Error copying to clipboard: ', err);
                }
                
                document.body.removeChild(textArea);
            }

            function showCopyNotification(copiedText) {
                $('#copy-message').text(`Copiado: ${copiedText}`);
                
                const toastElement = $('#copy-notification .toast')[0];
                const toast = new bootstrap.Toast(toastElement, {
                    delay: 5000
                });
                
                $('#copy-notification').show();
                toast.show();
                
                // Hide notification container when toast is hidden
                toastElement.addEventListener('hidden.bs.toast', function() {
                    $('#copy-notification').hide();
                });
            }
        });
    </script>
{{> bottomPage }}